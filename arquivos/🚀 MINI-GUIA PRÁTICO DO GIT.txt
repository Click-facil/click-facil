üöÄ MINI-GUIA PR√ÅTICO DO GIT
‚úÖ 1. Configura√ß√£o inicial (s√≥ precisa fazer 1 vez por m√°quina)
bash
Copiar
Editar
git config --global user.name "Matheus Henrique"
git config --global user.email "seuemail@example.com"
‚úÖ 2. Criar um novo reposit√≥rio local
bash
Copiar
Editar
git init
‚úÖ 3. Conectar ao GitHub (adiciona o reposit√≥rio remoto)
bash
Copiar
Editar
git remote add origin https://github.com/seu-usuario/seu-repo.git
‚úÖ 4. Verificar o status dos arquivos
bash
Copiar
Editar
git status
‚úÖ 5. Adicionar arquivos para o commit
bash
Copiar
Editar
git add .
O ponto . significa adicionar todos os arquivos alterados.

‚úÖ 6. Fazer o commit (registrar a altera√ß√£o localmente)
bash
Copiar
Editar
git commit -m "Mensagem explicando a altera√ß√£o"
‚úÖ 7. Enviar para o GitHub (push)
bash
Copiar
Editar
git push origin main
O main √© o nome da sua branch principal.

‚úÖ 8. Atualizar o projeto local com mudan√ßas do GitHub (pull)
bash
Copiar
Editar
git pull origin main
‚úÖ 9. Corrigir conflitos
Se der erro ao dar push, normalmente resolvemos com:

bash
Copiar
Editar
git pull origin main --rebase
E depois:

bash
Copiar
Editar
git push origin main
‚úÖ 10. Atalho com script .bat
Um script como commit-e-push.bat faz:

bat
Copiar
Editar
@echo off
echo =============================
echo Commit Autom√°tico Click F√°cil
echo =============================
set /p mensagem="Mensagem do commit: "
git add .
git commit -m "%mensagem%"
git push origin main
pause
Voc√™ s√≥ executa ele com:

bash
Copiar
Editar
.\commit-e-push.bat
üìå Dica final
Se quiser ver tudo que j√° foi commitado:

bash
Copiar
Editar
git log --oneline
Se quiser, eu tamb√©m posso:

Te gerar um PDF com isso tudo j√° formatado;

Criar um bloco de anota√ß√µes estilo guia r√°pido com exemplos reais do seu projeto.

Quer que eu monte isso tamb√©m?